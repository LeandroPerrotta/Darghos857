#please update this file ONLY by using update_makefileam.sh
#afterwards, if you're an official otserv developer, please
#commit your updated  into the repo
ots_data = \
	npc/lib/merchant.xml \
	npc/lib/bankman.xml \
	npc/lib/postman.xml \
	npc/oracle.xml \
	npc/bankman_billy.xml \
	npc/scripts/lib/npc.lua \
	npc/scripts/82test.lua \
	npc/scripts/ruby.lua \
	npc/scripts/cityguard.lua \
	npc/ruby.xml \
	npc/cityguard.xml \
	npc/merchant_glut.xml \
	npc/test82.xml \
	npc/mailman_maily.xml \
	npc/helmut.xml \
	commands.xml \
	movements/lib/movements.lua \
	movements/scripts/swimming.lua \
	movements/scripts/drowning.lua \
	movements/movements.xml \
	 \
	items/items.otb \
	items/items.xml \
	raids/testraid.xml \
	raids/scripts/raidevent.lua \
	raids/raids.xml \
	world/map.otbm \
	world/map-house.xml \
	world/rookgaard.otx \
	world/map-spawn.xml \
	quests.xml \
	talkactions/lib/talkactions.lua \
	talkactions/talkactions.xml \
	talkactions/scripts/onlinelist.lua \
	talkactions/scripts/configval.lua \
	talkactions/scripts/banmanager.lua \
	talkactions/scripts/housecleaning.lua \
	update_makefileam.sh \
	vocations.xml \
	admin.xml \
	monster/stalker.xml \
	monster/dog.xml \
	monster/magicthrower.xml \
	monster/giant_spider.xml \
	monster/monsters.xml \
	monster/warlock.xml \
	monster/demon.xml \
	monster/poison_spider.xml \
	monster/minotaur_archer.xml \
	creaturescripts/lib/creaturescripts.lua \
	creaturescripts/scripts/die1.lua \
	creaturescripts/scripts/die2.lua \
	creaturescripts/scripts/kill.lua \
	creaturescripts/scripts/login.lua \
	creaturescripts/scripts/logout.lua \
	creaturescripts/creaturescripts.xml \
	 \
	 \
	actions/lib/actions.lua \
	actions/scripts/trans_dec.lua \
	actions/scripts/key.lua \
	actions/scripts/spellscroll.lua \
	actions/scripts/fluids.lua \
	actions/scripts/door_close1.lua \
	actions/scripts/door_close2.lua \
	actions/scripts/decayto.lua \
	actions/scripts/food.lua \
	actions/scripts/music.lua \
	actions/scripts/shovel.lua \
	actions/scripts/fireworks.lua \
	actions/scripts/rage_trinket.lua \
	actions/scripts/rope.lua \
	actions/scripts/spellbook.lua \
	actions/scripts/fishing.lua \
	actions/scripts/house_tiles.lua \
	actions/scripts/teleport.lua \
	actions/scripts/setevent.lua \
	actions/scripts/door_close1e.lua \
	actions/scripts/door_close1n.lua \
	actions/scripts/door_close2e.lua \
	actions/scripts/blueberry_bush.lua \
	actions/scripts/door_close2n.lua \
	actions/scripts/door_open1.lua \
	actions/scripts/door_open2.lua \
	actions/scripts/trans_inc.lua \
	actions/actions.xml \
	global.lua \
	spells/lib/spells.lua \
	spells/scripts/magic_prison.lua \
	spells/scripts/wild_growth.lua \
	spells/scripts/magic_wall.lua \
	spells/scripts/magic_rope.lua \
	spells/scripts/combustion.lua \
	spells/scripts/strong_haste.lua \
	spells/scripts/energy_wall.lua \
	spells/scripts/ultimate_explosion.lua \
	spells/scripts/energy_wave.lua \
	spells/scripts/mass_healing.lua \
	spells/scripts/monsters/imitate.lua \
	spells/scripts/monsters/teleport.lua \
	spells/scripts/whirlwind.lua \
	spells/scripts/invisible.lua \
	spells/scripts/gfb.lua \
	spells/scripts/polymorph.lua \
	spells/scripts/paralyze.lua \
	spells/scripts/sd.lua \
	spells/scripts/uh.lua \
	spells/scripts/hmm.lua \
	spells/scripts/light.lua \
	spells/scripts/destroy_field.lua \
	spells/scripts/fire_field.lua \
	spells/scripts/apocalypse.lua \
	spells/scripts/drunk.lua \
	spells/scripts/healfriend.lua \
	spells/scripts/challenge.lua \
	spells/scripts/magic_shield.lua \
	spells/scripts/teleportrune.lua \
	spells/spells.xml \
	outfits.xml \
	weapons/lib/weapons.lua \
	weapons/scripts/poison_arrow.lua \
	weapons/scripts/poison_spear.lua \
	weapons/scripts/quagmire_rod.lua \
	weapons/scripts/tempest_rod.lua \
	weapons/scripts/explosive_arrow.lua \
	weapons/weapons.xml \
	#and that's it folks
EXTRA_DIST = Makefile.am Makefile.in  $(ots_data)

install-data-local:
	@echo Installing data...
	@for f in $(ots_data); do \
## Compute the install directory at runtime.
	  d=`echo $$f | sed -e s,/[^/]*$$,,`; \
## Make the install directory.
	  if [ \! $$d == $$f ]; then \
	    $(mkinstalldirs) $(DESTDIR)$(pkgdatadir)/$$d; \
	  fi; \
## Find the header file -- in our case it might be in srcdir or
## it might be in the build directory.  "p" is the variable that
## names the actual file we will install.
	  if test -f $(srcdir)/$$f; then p=$(srcdir)/$$f; else p=$$f; fi; \
##p=$$f ;
## Actually install the file.
	  $(INSTALL_DATA) $$p $(DESTDIR)$(pkgdatadir)/$$f; \
	done
	@echo Data installed


uninstall-local:
	@echo Uninstalling data...
	@for f in $(ots_data); do \
	  rm -f $(DESTDIR)$(pkgdatadir)/$$f; \
	done
	@echo Data uninstalled